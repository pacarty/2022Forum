@using Core.Entities
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> userManager;
@inject SignInManager<ApplicationUser> signinManager;


@if (signinManager.IsSignedIn(User))
{
    var user = await userManager.GetUserAsync(User);

    

    <form asp-area="" asp-controller="Account" asp-action="SignOut" method="post" id="logoutForm">
        <ul class="nav navbar-nav navbar-right">
            <li><a asp-controller="Manage" asp-action="MyAccount">@user.UserName</a></li>

            @if (user.AuthAccessLevel >= 2)
            {
                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" a href="#">Management
                    <span class="caret"></span></a>
                    <ul class="dropdown-menu">
                      <li><a asp-controller="UserManagement" asp-action="Index">User Management</a></li>
                      <li><a asp-controller="ContentManagement" asp-action="PostManagement">Post Management</a></li>
                      <li><a asp-controller="ContentManagement" asp-action="CommentManagement">Comment Management</a></li>
                    </ul>
                  </li>
            
            }
            <li><a href="javascript:document.getElementById('logoutForm').submit()">Log Out</a></li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-controller="Account" asp-action="Register">Register</a></li>
        <li><a asp-controller="Account" asp-action="SignIn">Log In</a></li>
    </ul>
}
