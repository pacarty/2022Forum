@using Core.Entities
@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> userManager;
@inject SignInManager<ApplicationUser> signinManager;


@if (signinManager.IsSignedIn(User))
{
    var user = await userManager.GetUserAsync(User);

    @if (user.AuthAccessLevel >= 2)
    {
        <p>
            <a asp-controller="UserManagement" asp-action="Index">User Management</a>
            <a asp-controller="ContentManagement" asp-action="PostManagement">Post Management</a>
            <a asp-controller="ContentManagement" asp-action="CommentManagement">Comment Management</a>
        </p>
    }

    <form asp-area="" asp-controller="Account" asp-action="SignOut" method="post" id="logoutForm">
        <a asp-controller="Manage" asp-action="MyAccount">@user.UserName</a>
        <a href="javascript:document.getElementById('logoutForm').submit()">Log Out</a>
    </form>
}
else
{
    <p>
        <a asp-controller="Account" asp-action="Register">Register</a>
        <a asp-controller="Account" asp-action="SignIn">Log In</a>
    </p>
}
